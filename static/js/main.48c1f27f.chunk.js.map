{"version":3,"sources":["logo.svg","pages.js","1F_9X9/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","MultiplicationChart","a2","a3","a4","a5","a6","a7","a8","a9","i","x","push","slice","App","Route","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kOCElCC,EAAO,WACT,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,SCALC,SAAsB,WAGxB,IAFA,IACIC,EAAKC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAD7BX,EAAG,GAECY,EAAE,EAAEA,GAAG,EAAEA,IAEb,IADA,IAAIC,EAAID,EACAA,EAAE,EAAEA,GAAG,EAAEA,IACbZ,EAAEc,KAAKf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOW,EAApB,MAA0BD,EAA1B,MAAgCC,EAAED,IAajD,OATAR,EAAGJ,EAAEe,MAAM,EAAE,GACbV,EAAGL,EAAEe,MAAM,EAAE,IACbT,EAAGN,EAAEe,MAAM,GAAG,IACdR,EAAGP,EAAEe,MAAM,GAAG,IACdP,EAAGR,EAAEe,MAAM,GAAG,IACdN,EAAGT,EAAEe,MAAM,GAAG,IACdL,EAAGV,EAAEe,MAAM,GAAG,IACdJ,EAAGX,EAAEe,MAAM,GAAG,IAGVhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,kCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,wBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,QACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,SAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACCE,GAELL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACKG,GAELN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACCI,GAELP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACCK,GAELR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACCM,GAELT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACCO,GAELV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACCQ,GAELX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KACKS,IAKbZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,0DChDGc,mLAbX,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGbH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtB,IACjCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,uBAAuBE,UAAWjB,YAPpCkB,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KAEM9B,EAAAC,EAAAC,cAAC6B,EAAD,OAGJC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.48c1f27f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return <h1 className=\"py-3\">Home</h1>;\r\n};\r\n// const Books = () => {\r\n//     return <h1 className=\"py-3\">Books</h1>;\r\n// };\r\nexport { Home};","import React from 'react';\r\nimport './style.css';\r\n\r\nconst MultiplicationChart = () => {\r\n    let a =[];\r\n    let a2 , a3 ,a4, a5, a6, a7, a8, a9;\r\n    for(let i=2;i<=9;i++){\r\n        let x = i;\r\n        for(let i=1;i<=9;i++){\r\n            a.push(<p className=\"one\">{x} X {i} = {x*i}</p>)\r\n        }\r\n        \r\n    }\r\n    a2=a.slice(0,9);\r\n    a3=a.slice(9,18);\r\n    a4=a.slice(18,27);\r\n    a5=a.slice(27,36);\r\n    a6=a.slice(36,45);\r\n    a7=a.slice(45,54);\r\n    a8=a.slice(54,63);\r\n    a9=a.slice(63,72);\r\n\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    <div className=\"x-top\">×</div>\r\n                    <hr className=\"line-top\"/>\r\n                    <div className=\"x-top\">×</div>\r\n                    <h1 className=\"title-cn\">九九乘法表</h1>\r\n                    <h1 className=\"title-en\">Multiplication Chart</h1>\r\n                    <div className=\"x-btm\">×</div>\r\n                    <hr className=\"line-btm\"/>\r\n                    <div className=\"x-btm\">×</div>\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">2</h2>\r\n                    {a2}\r\n                </div>\r\n                <div className=\"chart\">\r\n                <h2 className=\"number\">3</h2>\r\n                    {a3}\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">4</h2>\r\n                    {a4}\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">5</h2>\r\n                    {a5}\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">6</h2>\r\n                    {a6}\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">7</h2>\r\n                    {a7}\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">8</h2>\r\n                    {a8}\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <h2 className=\"number\">9</h2>\r\n                        {a9}\r\n                </div>\r\n               \r\n               \r\n            </div>\r\n            <div className=\"footer\">Copyright © 2019 HexSchool. All rights reserved.</div>\r\n        </div>\r\n    );\r\n};\r\nexport { MultiplicationChart};","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, browserHistory,IndexRoute,Router } from 'react-router-dom';\nimport { Home} from './pages';\nimport { MultiplicationChart} from './1F_9X9/index';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n      {/* The corresponding component will show here if the current URL matches the path */}\n      {/* <Route path={process.env.PUBLIC_URL + '/'} exact component={Home} /> */}\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/MultiplicationChart\" component={MultiplicationChart} />\n      \n    </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n      \n        <App />\n      \n  </HashRouter>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}